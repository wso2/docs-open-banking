[server]
hostname = "gwam"
#node_ip = "127.0.0.1"
base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
server_role = "gateway-worker"

[super_admin]
username = "am_admin@wso2.com"
password = "wso2123"
create_admin_account = true

[tenant_mgt]
enable_email_domain = true

[user_store]
type = "database_unique_id"
class = "org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager"

# for registry data
[database.shared_db]
url = "jdbc:mysql://<DB_HOST>>:3306/fs_am_configdb?autoReconnect=true&amp;useSSL=false"
username = "root"
password = "root"
driver = "com.mysql.jdbc.Driver"

[database.shared_db.pool_options]
maxActive = "150"
maxWait = "60000"
minIdle ="5"
testOnBorrow = true
validationQuery="SELECT 1"
#Use below for oracle
#validationQuery="SELECT 1 FROM DUAL"
validationInterval="30000"
defaultAutoCommit=true

[database.apim_db]
url = "jdbc:mysql://<DB_HOST>:3306/fs_apimgtdb?autoReconnect=true&amp;useSSL=false"
username = "root"
password = "root"
driver = "com.mysql.jdbc.Driver"

[database.apim_db.pool_options]
maxActive = "150"
maxWait = "60000"
minIdle ="5"
testOnBorrow = true
validationQuery="SELECT 1"
#Use below for oracle
#validationQuery="SELECT 1 FROM DUAL"
validationInterval="30000"
defaultAutoCommit=true

[keystore.tls]
file_name =  "wso2carbon.jks"
type =  "JKS"
password =  "wso2carbon"
alias =  "wso2carbon"
key_password =  "wso2carbon"

[truststore]
file_name = "client-truststore.jks"
type = "JKS"
password = "wso2carbon"

# key manager implementation
[apim.key_manager]
#enable_lightweight_apikey_generation = true
service_url = "https://obis:9446/services/"
username = "is_admin@wso2.com"
password = "wso2123"
#pool.init_idle_capacity = 50
#pool.max_idle = 100
#key_validation_handler_type = "default"
#key_validation_handler_type = "custom"
#key_validation_handler_impl = "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler"
allow_subscription_validation_disabling = true

# JWT Generation
#[apim.jwt]
#enable = true
#encoding = "base64" # base64,base64url
#generator_impl = "org.wso2.carbon.apimgt.keymgt.token.JWTGenerator"
#claim_dialect = "http://wso2.org/claims"
#convert_dialect = false
#header = "X-JWT-Assertion"
#signing_algorithm = "SHA256withRSA"
#enable_user_claims = true
#claims_extractor_impl = "org.wso2.carbon.apimgt.impl.token.ExtendedDefaultClaimsRetriever"
#use_sha256_hash = false

[apim.sync_runtime_artifacts.gateway]
gateway_labels =["Default"]
skip_list.sequences = ["customErrorFormatter.xml"]

# Traffic Manager configurations

[apim.throttling]
service_url = "https://cpam:9443/services/"
throttle_decision_endpoints = ["tcp://cpam:5672"]
username= "$ref{super_admin.username}@carbon.super"
password= "$ref{super_admin.password}"
#enable_data_publishing = true
#enable_policy_deploy = true
#enable_blacklist_condition = true
#enable_persistence = true
#throttle_decision_endpoints = ["tcp://localhost:5672","tcp://localhost:5672"]

[apim.throttling.policy_deploy]
username = "$ref{super_admin.username}@carbon.super"

#[apim.throttling.blacklist_condition]
#start_delay = "5m"
#period = "1h"

[apim.throttling.jms]
username="am_admin!wso2.com!carbon.super"
password = "$ref{super_admin.password}"

[apim.event_hub.jms]
username="am_admin!wso2.com!carbon.super"
password= "$ref{super_admin.password}"

#[apim.throttling.event_sync]
#hostName = "0.0.0.0"
#port = 11224

#[apim.throttling.event_management]
#hostName = "0.0.0.0"
#port = 10005

[[apim.throttling.url_group]]
traffic_manager_urls = ["tcp://cpam:9611"]
traffic_manager_auth_urls = ["ssl://cpam:9711"]

[apim.analytics]
enable = false
auth_token = ""

[[blocking.custom_message_formatters]]
class = "org.apache.axis2.format.PlainTextFormatter"
content_type = "application/jwt"

[[blocking.custom_message_builders]]
class = "org.apache.axis2.format.PlainTextBuilder"
content_type = "application/jwt"

[[custom_message_formatters]]
class = "org.apache.axis2.format.PlainTextFormatter"
content_type = "application/jwt"

[[custom_message_builders]]
class = "org.apache.axis2.format.PlainTextBuilder"
content_type = "application/jwt"

[apimgt.mutual_ssl]
enable_certificate_chain_validation = true

[transport.passthru_https.listener.cert_revocation_validation]
enable = false
allow_cert_expiry_validation = false
allow_full_cert_chain_validation = false
cache_delay = 1000
cache_size = 1024

[transport.passthru_https.sender.parameters]
HostnameVerifier = "AllowAll"

[passthru_http]
"http.headers.preserve"="Content-Type,Date"

[transport.passthru_https.listener.parameters]
HttpsProtocols = "TLSv1.2"
PreferredCiphers = "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"

[[event_handler]]
name="userPostSelfRegistration"
subscriptions=["POST_ADD_USER"]

[service_provider]
sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

[database.local]
url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

# Caches
#[apim.cache.gateway_token]
#enable = true
#expiry_time = "900s"

#[apim.cache.resource]
#enable = true
#expiry_time = "900s"

#[apim.cache.jwt_claim]
#enable = true
#expiry_time = "15m"

[apim.oauth_config]
enable_outbound_auth_header = true
white_listed_scopes = ["^device_.*", "openid", "^FS_.*", "^TIME_.*"]
#auth_header = "Authorization"
#revoke_endpoint = "https://localhost:${https.nio.port}/revoke"
#enable_token_encryption = false
#enable_token_hashing = false
#enable_token_binding = false
#allowed_token_binding_types = ["none"]

[financial_services]
publisher_url="https://cpam:9443/publisher"

[financial_services.extensions.endpoint]
enabled = true
allowed_extensions = ["pre-process-application-creation", "pre-process-application-update"]
base_url = "https://gwam:9443/api/reference-implementation/ob/nextgenpsd2"
retry_count = 5
connect_timeout = 5000
read_timeout = 5000

[financial_services.extensions.endpoint.security]
# supported types : Basic-Auth or OAuth2
type = "Basic-Auth"
username = "am_admin@wso2.com"
password = "wso2123"

[synapse_properties]
'synapse.artifacts.file.storage.enabled' = true

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey","Internal-Key"]
allow_credentials = false
